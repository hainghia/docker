services:
  users:
    image: kukun/rust-users:latest
    container_name: users
    restart: always
    depends_on:
      - user-db
    links:
      - user-db
    environment:
      APP_URL: ${APP_URL} #0.0.0.0
      APP_PORT: ${APP_PORT}
      APP_NAME: ${APP_NAME}
      APP_CLIENT: "http://localhost"
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: user-db
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      PASSWORD_SECRET_KEY: ${PASSWORD_SECRET_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      REFRESH_TOKEN_COOKIE_NAME: ${REFRESH_TOKEN_COOKIE_NAME}
    networks:
      users:
      haproxy_network:
        aliases:
          - microservice_user

  user-db:
    image: postgres:15.2-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - type: volume
        source: db-data
        target: /var/lib/postgresql/data
        volume:
          nocopy: true
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1m
      timeout: 5s
      start_period: 10s
      retries: 3
    networks:
      - users

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    links:
      - users
    depends_on:
      - users
    environment:
      WATCHTOWER_MONITOR_ONLY: 'false'
      WATCHTOWER_NOTIFICATIONS: email # https://containrrr.dev/watchtower/notifications/#legacy_notifications
      WATCHTOWER_NOTIFICATION_EMAIL_FROM: ${WATCHTOWER_NOTIFICATION_EMAIL_FROM:-"hainghia.developer@gmail.com"}
      WATCHTOWER_NOTIFICATION_EMAIL_TO: ${WATCHTOWER_NOTIFICATION_EMAIL_TO:-"kukunkks@gmail.com"}
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER: ${WATCHTOWER_NOTIFICATION_EMAIL_SERVER:-"smtp.gmail.com"}
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT: ${WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT:-587}
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER: ${WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER}
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD: ${WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD}
      WATCHTOWER_NOTIFICATION_EMAIL_DELAY: ${WATCHTOWER_NOTIFICATION_EMAIL_DELAY:-1}
      WATCHTOWER_NOTIFICATION_EMAIL_SUBJECTTAG: ${WATCHTOWER_NOTIFICATION_EMAIL_SUBJECTTAG:-"Title mail"}
    command: --interval 1 users
    networks:
      - users

volumes:
  db-data:

networks:
  users:
    driver: bridge
  haproxy_network:
    external: true
    name: haproxy_network